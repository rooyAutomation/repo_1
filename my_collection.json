{
	"info": {
		"_postman_id": "11015dec-ad25-4376-be8e-e5815216fd97",
		"name": "roy_variable",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_list user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a9b58d7-551d-45a5-adfd-9ba2bd70100d",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"",
							"//pm.environment.set(\"accessToken\" token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessTokenl}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "4be5085b-5627-4e01-b664-a7ea05489078,9909243f-0727-478d-bfda-00aadf14d957",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/{{endpoint}}/users?page=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc350e76-4e8b-4858-abbb-f67a7d081194",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{endpoint}}/users/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_single user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{endpoint}}/users/23",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_list resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{endpoint}}/unknown",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_single resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{endpoint}}/unknown/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_single resource not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{endpoint}}/unknown/23",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"unknown",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "post_create",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b361c12c-52c0-4c60-9e48-c37b0f9c8717",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "post_register successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "post_register unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "post_login successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "post_login unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a9b58d7-551d-45a5-adfd-9ba2bd70100d",
						"exec": [
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"//pm.environment.set(\"accessToken\" token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessTokenl}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "4be5085b-5627-4e01-b664-a7ea05489078,9909243f-0727-478d-bfda-00aadf14d957",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					}
				],
				"url": {
					"raw": "{{url}}/{{endpoint}}/page=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"page=2"
					]
				}
			},
			"response": []
		},
		{
			"name": "delayed response",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{endpoint}}/users?",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{endpoint}}",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b998851-43c8-4e3e-a1f8-8b33069a797a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokrn}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"type": "text",
						"value": "foo"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://httpbin.org/bearer?",
					"protocol": "http",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"bearer"
					],
					"query": [
						{
							"key": "delay",
							"value": "3",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e26bc643-0bd6-4360-a2b7-907b10ef05d9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a20b9012-4995-496d-9589-7c75997d3d2d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "aa2b886a-7936-4db1-a52f-49f37f6a9956",
			"key": "url",
			"value": "https://reqres.in",
			"type": "string",
			"disabled": true
		}
	]
}